import {
  MDCComponent,
  MDCFoundation,
  __assign,
  __extends
} from "./chunk-2UTNIWRO.js";

// node_modules/@material/tab-indicator/constants.js
var cssClasses = {
  ACTIVE: "mdc-tab-indicator--active",
  FADE: "mdc-tab-indicator--fade",
  NO_TRANSITION: "mdc-tab-indicator--no-transition"
};
var strings = {
  CONTENT_SELECTOR: ".mdc-tab-indicator__content"
};

// node_modules/@material/tab-indicator/foundation.js
var MDCTabIndicatorFoundation = function(_super) {
  __extends(MDCTabIndicatorFoundation2, _super);
  function MDCTabIndicatorFoundation2(adapter) {
    return _super.call(this, __assign(__assign({}, MDCTabIndicatorFoundation2.defaultAdapter), adapter)) || this;
  }
  Object.defineProperty(MDCTabIndicatorFoundation2, "cssClasses", {
    get: function() {
      return cssClasses;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MDCTabIndicatorFoundation2, "strings", {
    get: function() {
      return strings;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MDCTabIndicatorFoundation2, "defaultAdapter", {
    get: function() {
      return {
        addClass: function() {
          return void 0;
        },
        removeClass: function() {
          return void 0;
        },
        computeContentClientRect: function() {
          return { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };
        },
        setContentStyleProperty: function() {
          return void 0;
        }
      };
    },
    enumerable: false,
    configurable: true
  });
  MDCTabIndicatorFoundation2.prototype.computeContentClientRect = function() {
    return this.adapter.computeContentClientRect();
  };
  return MDCTabIndicatorFoundation2;
}(MDCFoundation);

// node_modules/@material/tab-indicator/fading-foundation.js
var MDCFadingTabIndicatorFoundation = function(_super) {
  __extends(MDCFadingTabIndicatorFoundation2, _super);
  function MDCFadingTabIndicatorFoundation2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  MDCFadingTabIndicatorFoundation2.prototype.activate = function() {
    this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);
  };
  MDCFadingTabIndicatorFoundation2.prototype.deactivate = function() {
    this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);
  };
  return MDCFadingTabIndicatorFoundation2;
}(MDCTabIndicatorFoundation);

// node_modules/@material/tab-indicator/sliding-foundation.js
var MDCSlidingTabIndicatorFoundation = function(_super) {
  __extends(MDCSlidingTabIndicatorFoundation2, _super);
  function MDCSlidingTabIndicatorFoundation2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  MDCSlidingTabIndicatorFoundation2.prototype.activate = function(previousIndicatorClientRect) {
    if (!previousIndicatorClientRect) {
      this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);
      return;
    }
    var currentClientRect = this.computeContentClientRect();
    var widthDelta = previousIndicatorClientRect.width / currentClientRect.width;
    var xPosition = previousIndicatorClientRect.left - currentClientRect.left;
    this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);
    this.adapter.setContentStyleProperty("transform", "translateX(" + xPosition + "px) scaleX(" + widthDelta + ")");
    this.computeContentClientRect();
    this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);
    this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);
    this.adapter.setContentStyleProperty("transform", "");
  };
  MDCSlidingTabIndicatorFoundation2.prototype.deactivate = function() {
    this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);
  };
  return MDCSlidingTabIndicatorFoundation2;
}(MDCTabIndicatorFoundation);

// node_modules/@material/tab-indicator/component.js
var MDCTabIndicator = function(_super) {
  __extends(MDCTabIndicator2, _super);
  function MDCTabIndicator2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  MDCTabIndicator2.attachTo = function(root) {
    return new MDCTabIndicator2(root);
  };
  MDCTabIndicator2.prototype.initialize = function() {
    this.content = this.root.querySelector(MDCTabIndicatorFoundation.strings.CONTENT_SELECTOR);
  };
  MDCTabIndicator2.prototype.computeContentClientRect = function() {
    return this.foundation.computeContentClientRect();
  };
  MDCTabIndicator2.prototype.getDefaultFoundation = function() {
    var _this = this;
    var adapter = {
      addClass: function(className) {
        return _this.root.classList.add(className);
      },
      removeClass: function(className) {
        return _this.root.classList.remove(className);
      },
      computeContentClientRect: function() {
        return _this.content.getBoundingClientRect();
      },
      setContentStyleProperty: function(prop, value) {
        _this.content.style.setProperty(prop, value);
      }
    };
    if (this.root.classList.contains(MDCTabIndicatorFoundation.cssClasses.FADE)) {
      return new MDCFadingTabIndicatorFoundation(adapter);
    }
    return new MDCSlidingTabIndicatorFoundation(adapter);
  };
  MDCTabIndicator2.prototype.activate = function(previousIndicatorClientRect) {
    this.foundation.activate(previousIndicatorClientRect);
  };
  MDCTabIndicator2.prototype.deactivate = function() {
    this.foundation.deactivate();
  };
  return MDCTabIndicator2;
}(MDCComponent);

export {
  cssClasses,
  strings,
  MDCTabIndicatorFoundation,
  MDCFadingTabIndicatorFoundation,
  MDCSlidingTabIndicatorFoundation,
  MDCTabIndicator
};
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
//# sourceMappingURL=chunk-6DZTNVPL.js.map
